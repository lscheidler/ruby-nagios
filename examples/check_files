#!/usr/bin/env ruby
# Copyright 2018 Lars Eric Scheidler
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require 'bundler/setup'
require 'nagios'

require 'optparse'

# check file count in directory
class CheckFiles < Nagios::Plugin
  def initialize
    super do
      parse_arguments

      expect_not_nil 'directory', @directory,       status: @precheck_status, msg: '-d must be set'
      expect_not_nil 'critical',  @critical_level,  status: @precheck_status, msg: '-c must be set'
      expect_not_nil 'warning',   @warning_level,   status: @precheck_status, msg: '-w must be set'
      exit_with_msg if failed?

      expect_level 'files', Dir.glob(@directory + '/*').length, critical_level: @critical_level, warning_level: @warning_level
    end
  end

  def set_plugin_defaults
    @precheck_status = :unknown
  end

  def parse_arguments
    @options = OptionParser.new do |opts|
      opts.on('-d', '--directory Name', 'directory to check') do |directory|
        @directory = directory
      end

      opts.on('-c', '--critical LEVEL', 'set critical level') do |critical_level|
        @critical_level = critical_level.to_i
      end

      opts.on('-w', '--warning LEVEL', 'set warning level') do |warning_level|
        @warning_level = warning_level.to_i
      end

      opts.separator "
examples:
  #{File.basename $0} -d /tmp -c 20 -w 10
  #=> CRITICAL: critical(files=97) | files=97
"
    end
    @options.parse!
  end
end

CheckFiles.new
